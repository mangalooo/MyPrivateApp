// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPrivateApp.Data;

#nullable disable

namespace MyPrivateApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250722124223_newModelsFarmWorksPlanningAndCompleted")]
    partial class newModelsFarmWorksPlanningAndCompleted
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MyPrivateApp.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.Contacts", b =>
                {
                    b.Property<int>("ContactsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactsId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildFour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChristmasCard")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Colleagues")
                        .HasColumnType("bit");

                    b.Property<string>("ExtraMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Friends")
                        .HasColumnType("bit");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarriedPartner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostCode")
                        .HasColumnType("int");

                    b.Property<string>("PrivateMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Relatives")
                        .HasColumnType("bit");

                    b.Property<string>("WorkEMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactsId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.FarmWork.FarmWorks", b =>
                {
                    b.Property<int>("FarmWorksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FarmWorksId"));

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Hours")
                        .HasColumnType("float");

                    b.Property<bool>("NextSalary")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.HasKey("FarmWorksId");

                    b.ToTable("FarmWorks");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.FarmWork.FarmWorksPlanning", b =>
                {
                    b.Property<int>("FarmWorksPlanningsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FarmWorksPlanningsId"));

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Hectare")
                        .HasColumnType("float");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<string>("PlanningDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prioritize")
                        .HasColumnType("int");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Todo")
                        .HasColumnType("int");

                    b.HasKey("FarmWorksPlanningsId");

                    b.ToTable("FarmWorksPlanning");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.FarmWork.FarmWorksPlanningCompleted", b =>
                {
                    b.Property<int>("FarmWorksPlanningCompletedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FarmWorksPlanningCompletedId"));

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Hectare")
                        .HasColumnType("float");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<string>("PlanningDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prioritize")
                        .HasColumnType("int");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Todo")
                        .HasColumnType("int");

                    b.HasKey("FarmWorksPlanningCompletedId");

                    b.ToTable("FarmWorksPlanningCompleted");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.Farming.FarmingsActive", b =>
                {
                    b.Property<int>("FarmingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FarmingId"));

                    b.Property<int>("HowMany")
                        .HasColumnType("int");

                    b.Property<int>("HowManySave")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PutSeedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TakeUpDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FarmingId");

                    b.ToTable("FarmingsActive");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.Farming.FarmingsInactive", b =>
                {
                    b.Property<int>("FarmingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FarmingId"));

                    b.Property<int>("HowMany")
                        .HasColumnType("int");

                    b.Property<int>("HowManySave")
                        .HasColumnType("int");

                    b.Property<string>("InactiveDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PutSeedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TakeUpDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FarmingId");

                    b.ToTable("FarmingsInactive");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.FrozenFoods", b =>
                {
                    b.Property<int>("FrozenFoodsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FrozenFoodsId"));

                    b.Property<string>("Date")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FreezerCompartment")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("FrozenGoods")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Place")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("FrozenFoodsId");

                    b.ToTable("FrozenFoods");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.Games.ManagerZone.MZPurchasedPlayers", b =>
                {
                    b.Property<int>("ManagerZonePurchasedPlayersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerZonePurchasedPlayersId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseAmount")
                        .HasColumnType("int");

                    b.Property<string>("PurchasedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("SalarySaved")
                        .HasColumnType("int");

                    b.Property<int>("TrainingModeTotalCost")
                        .HasColumnType("int");

                    b.Property<int>("YearsOld")
                        .HasColumnType("int");

                    b.HasKey("ManagerZonePurchasedPlayersId");

                    b.ToTable("MZPurchasedPlayers");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.Games.ManagerZone.MZSoldPlayers", b =>
                {
                    b.Property<int>("ManagerZoneSoldPlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerZoneSoldPlayerId"));

                    b.Property<int>("DaysInTheClub")
                        .HasColumnType("int");

                    b.Property<double>("MoneyProfitOrLoss")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("PercentProfitOrLoss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseAmount")
                        .HasColumnType("int");

                    b.Property<string>("PurchasedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalaryTotal")
                        .HasColumnType("int");

                    b.Property<double>("SaleCharge")
                        .HasColumnType("float");

                    b.Property<int>("SoldAmount")
                        .HasColumnType("int");

                    b.Property<string>("SoldDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.Property<int>("TrainingModeTotalCost")
                        .HasColumnType("int");

                    b.Property<int>("YearsOld")
                        .HasColumnType("int");

                    b.HasKey("ManagerZoneSoldPlayerId");

                    b.ToTable("MZSoldPlayers");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.Hunting.HuntingMyList", b =>
                {
                    b.Property<int>("HuntingMyListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HuntingMyListId"));

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HuntingForm")
                        .HasColumnType("int");

                    b.Property<int>("HuntingPlaces")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WildAnimal")
                        .HasColumnType("int");

                    b.HasKey("HuntingMyListId");

                    b.ToTable("HuntingMyList");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.Hunting.HuntingPrey", b =>
                {
                    b.Property<int>("HuntingPreyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HuntingPreyId"));

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hunter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HuntingForm")
                        .HasColumnType("int");

                    b.Property<string>("HuntingPass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HuntingPlaces")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WildAnimal")
                        .HasColumnType("int");

                    b.HasKey("HuntingPreyId");

                    b.ToTable("HuntingPrey");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.Hunting.HuntingTeamMembers", b =>
                {
                    b.Property<int>("HuntingTeamMembersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HuntingTeamMembersId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HuntingTeamMembersId");

                    b.ToTable("HuntingTeamMembers");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.Hunting.HuntingTowerInspection", b =>
                {
                    b.Property<int>("HuntingTowerInspectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HuntingTowerInspectionId"));

                    b.Property<bool>("Inspected")
                        .HasColumnType("bit");

                    b.Property<bool>("InspectedTodo")
                        .HasColumnType("bit");

                    b.Property<string>("LastInspected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MooseTower")
                        .HasColumnType("bit");

                    b.Property<bool>("NotBeUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<int>("Todo")
                        .HasColumnType("int");

                    b.Property<bool>("WildBoarTower")
                        .HasColumnType("bit");

                    b.HasKey("HuntingTowerInspectionId");

                    b.ToTable("HuntingTowerInspections");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.LastEmailSent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LastEmailSent");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesDepositMoney", b =>
                {
                    b.Property<int>("DepositMoneyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepositMoneyId"));

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DepositMoney")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubmitOrWithdraw")
                        .HasColumnType("int");

                    b.Property<string>("TransferOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfTransaction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepositMoneyId");

                    b.ToTable("SharesDepositMoney");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesDividend", b =>
                {
                    b.Property<int>("DividendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DividendId"));

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CalculationFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NumberOfShares")
                        .HasColumnType("float");

                    b.Property<double>("PricePerShare")
                        .HasColumnType("float");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfTransaction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DividendId");

                    b.ToTable("SharesDividends");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesErrorHandlings", b =>
                {
                    b.Property<int>("ErrorHandlingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErrorHandlingsId"));

                    b.Property<string>("CompanyOrInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfTransaction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ErrorHandlingsId");

                    b.ToTable("SharesErrorHandlings");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesFee", b =>
                {
                    b.Property<int>("SharesFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SharesFeeId"));

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Brokerage")
                        .HasColumnType("float");

                    b.Property<bool>("CalculationFlag")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyOrInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<string>("ISIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfTransaction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SharesFeeId");

                    b.ToTable("SharesFees");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesImportsFile", b =>
                {
                    b.Property<int>("SharesImportsFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SharesImportsFileId"));

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Errors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumbersOfTransaction")
                        .HasColumnType("int");

                    b.HasKey("SharesImportsFileId");

                    b.ToTable("SharesImportsFiles");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesInterestRates", b =>
                {
                    b.Property<int>("InterestRatesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestRatesId"));

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CalculationFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfTransaction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestRatesId");

                    b.ToTable("SharesInterestRates");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesOtherImports", b =>
                {
                    b.Property<int>("OtherImportsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtherImportsId"));

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("Brokerage")
                        .HasColumnType("float");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NumberOfShares")
                        .HasColumnType("float");

                    b.Property<double>("PricePerShare")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfTransaction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OtherImportsId");

                    b.ToTable("SharesOtherImports");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesProfitOrLossYears", b =>
                {
                    b.Property<int>("SharesProfitOrLossYearsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SharesProfitOrLossYearsId"));

                    b.Property<double>("BrokerageYear")
                        .HasColumnType("float");

                    b.Property<double>("DividendYear")
                        .HasColumnType("float");

                    b.Property<double>("FeeYear")
                        .HasColumnType("float");

                    b.Property<double>("FundsYear")
                        .HasColumnType("float");

                    b.Property<double>("InterestRatesYear")
                        .HasColumnType("float");

                    b.Property<double>("MoneyProfitOrLossYear")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentProfitOrLossYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SharesYear")
                        .HasColumnType("float");

                    b.Property<double>("TaxYear")
                        .HasColumnType("float");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SharesProfitOrLossYearsId");

                    b.ToTable("SharesProfitOrLossYears");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesPurchasedFunds", b =>
                {
                    b.Property<int>("SharesPurchasedFundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SharesPurchasedFundId"));

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfPurchase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<string>("FundName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HowMany")
                        .HasColumnType("float");

                    b.Property<string>("ISIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerFunds")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfFund")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SharesPurchasedFundId");

                    b.ToTable("SharesPurchasedFunds");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesPurchaseds", b =>
                {
                    b.Property<int>("SharesPurchasedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SharesPurchasedId"));

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("Brokerage")
                        .HasColumnType("float");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfPurchase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HowMany")
                        .HasColumnType("float");

                    b.Property<string>("ISIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerShares")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfShares")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SharesPurchasedId");

                    b.ToTable("SharesPurchaseds");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesSoldFunds", b =>
                {
                    b.Property<int>("SharesSoldFundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SharesSoldFundId"));

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AmountSold")
                        .HasColumnType("float");

                    b.Property<bool>("CalculationFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfPurchase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfSold")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<string>("FundName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HowMany")
                        .HasColumnType("float");

                    b.Property<string>("ISIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MoneyProfitOrLoss")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentProfitOrLoss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerFunds")
                        .HasColumnType("float");

                    b.Property<double>("PricePerFundsSold")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfFund")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SharesSoldFundId");

                    b.ToTable("SharesSoldFunds");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesSolds", b =>
                {
                    b.Property<int>("SharesSoldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SharesSoldId"));

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AmountSold")
                        .HasColumnType("float");

                    b.Property<double>("Brokerage")
                        .HasColumnType("float");

                    b.Property<bool>("CalculationFlag")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfPurchase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfSold")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HowMany")
                        .HasColumnType("float");

                    b.Property<string>("ISIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MoneyProfitOrLoss")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentProfitOrLoss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerShares")
                        .HasColumnType("float");

                    b.Property<double>("PricePerSharesSold")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfShares")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SharesSoldId");

                    b.ToTable("SharesSolds");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesTotalAmounts", b =>
                {
                    b.Property<int>("TotalAmountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TotalAmountId"));

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("TotalAmountId");

                    b.ToTable("SharesTotalAmounts");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.SharesModels.SharesTotalProfitsOrLosses", b =>
                {
                    b.Property<int>("SharesTotalProfitOrLossId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SharesTotalProfitOrLossId"));

                    b.Property<double>("TotalProfitOrLoss")
                        .HasColumnType("float");

                    b.HasKey("SharesTotalProfitOrLossId");

                    b.ToTable("SharesTotalProfitsOrLosses");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.ShopingList", b =>
                {
                    b.Property<int>("ShopingListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopingListId"));

                    b.Property<string>("Date")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("List")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShopingListId");

                    b.ToTable("ShopingLists");
                });

            modelBuilder.Entity("MyPrivateApp.Data.Models.Trips", b =>
                {
                    b.Property<int>("TripsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripsId"));

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Date")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HomeDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("HowManyDays")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<string>("Place")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TravelBuddies")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("TripsId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MyPrivateApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MyPrivateApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyPrivateApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MyPrivateApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
