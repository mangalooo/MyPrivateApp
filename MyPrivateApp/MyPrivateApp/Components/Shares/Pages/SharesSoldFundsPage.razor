@page "/SharesSoldFundsPage"

@using MyPrivateApp.Client.ViewModels
@using MyPrivateApp.Components.Enum
@using MyPrivateApp.Components.ViewModels.SharesViewModels
@using MyPrivateApp.Data
@using MyPrivateApp.Data.Models
@using Microsoft.AspNetCore.Components.QuickGrid
@using MyPrivateApp.Data.Models.SharesModels
@using MyPrivateApp.Components.Shares.Classes

@rendermode InteractiveServer

@inject ApplicationDbContext db
@inject NavigationManager Navigation
@inject ISharesSoldFundsClass BackEndClass

<PageTitle> Aktier </PageTitle>

@* Heading *@
<div>

    <br />

    @* Navigation - Desktop *@
    <div id="desktop" style="text-align:center">
        <div class="btn-group">
            <NavLink href="SharesPage" type="button" class="btn btn-outline-dark btn-sm"> Start </NavLink>
            <NavLink href="SharesImportsPage" type="button" class="btn btn-outline-dark btn-sm"> Importera </NavLink>
            <NavLink href="SharesPurchasedPage" type="button" class="btn btn-outline-dark btn-sm"> Köpta aktier </NavLink>
            <NavLink href="SharesSoldPage" type="button" class="btn btn-outline-dark btn-sm">Sålda aktier</NavLink>
            <NavLink href="SharesPurchasedFundsPage" type="button" class="btn btn-outline-dark btn-sm"> Köpta fonder </NavLink>
            <NavLink href="SharesSoldFundsPage" type="button" class="btn btn-outline-dark btn-sm"> Sålda fonder </NavLink>
            <NavLink href="SharesDividendPage" type="button" class="btn btn-outline-dark btn-sm">Utdelningar</NavLink>
            <NavLink href="SharesFeePage" type="button" class="btn btn-outline-dark btn-sm">Avgifter</NavLink>
            <NavLink href="SharesDepositMoneyPage" type="button" class="btn btn-outline-dark btn-sm"> Banköverföringar </NavLink>
            <NavLink href="SharesInterestRatesPage" type="button" class="btn btn-outline-dark btn-sm"> Räntor </NavLink>
            <NavLink href="SharesOtherImportsPage" type="button" class="btn btn-outline-dark btn-sm"> Manuell hantering </NavLink>
            <NavLink href="SharesErrorHandlingPage" type="button" class="btn btn-outline-dark btn-sm">Felhantering</NavLink>
        </div>
    </div>

    @* Navigation - Mobile *@
    <div id="mobile">
        <div class="btn-group" role="group">
            <button title="Info" id="btnGroupDrop1" type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                Alla aktier sidor
            </button>
            <ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                <li class="dropdown-item"><NavLink href="SharesPage" type="button" class="btn btn-outline-dark btn-sm"> Start </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesImportsPage" type="button" class="btn btn-outline-dark btn-sm"> Importera </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesPurchasedPage" type="button" class="btn btn-outline-dark btn-sm"> Köpta aktier </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesSoldPage" type="button" class="btn btn-outline-dark btn-sm">Sålda aktier</NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesPurchasedFundsPage" type="button" class="btn btn-outline-dark btn-sm"> Köpta fonder </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesSoldFundsPage" type="button" class="btn btn-outline-dark btn-sm"> Sålda fonder </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesDividendPage" type="button" class="btn btn-outline-dark btn-sm">Utdelningar</NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesFeePage" type="button" class="btn btn-outline-dark btn-sm">Avgifter</NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesDepositMoneyPage" type="button" class="btn btn-outline-dark btn-sm"> Banköverföringar </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesInterestRatesPage" type="button" class="btn btn-outline-dark btn-sm"> Räntor </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesOtherImportsPage" type="button" class="btn btn-outline-dark btn-sm"> Manuell hantering </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesErrorHandlingPage" type="button" class="btn btn-outline-dark btn-sm">Felhantering</NavLink></li>
            </ul>
        </div>
    </div>

    <br />
    <br />

    <h1 style="text-align:center"> Sålda fonder </h1>

    @* Create button *@
    <div style="text-align:center" hidden="@ShowOrHideCreateButton">

        <br />
        <br />

        <button class="btn btn-outline-success btn-sm" @onclick="@HideNewOrChangesForm"> Sälj fonden</button>
    </div>

    @* Error message *@
    <div style="text-align:center" hidden="@ShowOrHideErrorMessage">

        <br />
        <br />

        <Alert Color="AlertColor.Danger"> <Icon Name="IconName.ExclamationTriangleFill" class="me-2"></Icon> <b>@ErrorMessage</b> </Alert>
    </div>

    <br />
    <br />

</div>

@* Form and views *@
<div class="container">
    <div class="col-md-12">
        <div class="card">

            @* Form *@
            <div class="card-header">
                <EditForm Model="pageModel" OnSubmit="AddOrEdit" FormName="AddOrUpdate" Enhance hidden="@(!HideNewOrChangesFields)">

                    <DataAnnotationsValidator />

                    <ValidationSummary class="text-danger" role="alert" />

                    <div class="row">

                        <div id="mobile" class="col-3" />

                        <div class="col-3">
                            <div class="form-floating">
                                <InputText @bind-Value="pageModel.FundName" class="form-control" disabled="@DisabledForm" />
                                <label for="FundName"> Fond namn </label>
                                <ValidationMessage For="() => pageModel.FundName" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputText @bind-Value="pageModel.TypeOfFund" class="form-control" disabled="@DisabledForm" />
                                <label for="TypeOfFund"> Typ av fond </label>
                                <ValidationMessage For="() => pageModel.TypeOfFund" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputText @bind-Value="pageModel.ISIN" class="form-control" disabled="@DisabledForm" />
                                <label for="ISIN"> ISIN </label>
                                <ValidationMessage For="() => pageModel.ISIN" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputText @bind-Value="pageModel.Account" class="form-control" disabled="@DisabledForm" />
                                <label for="Account"> Konto </label>
                                <ValidationMessage For="() => pageModel.Account" class="text-danger" />
                            </div>
                        </div>

                    </div>

                    <br />

                    <div class="row">

                        <div id="mobile" class="col-3" />

                        <div class="col-3">
                            <div class="form-floating">
                                <InputDate @bind-Value="pageModel.DateOfPurchase" class="form-control" disabled="@DisabledForm" />
                                <label for="DateOfPurchase"> Inköpsdatum </label>
                                <ValidationMessage For="() => pageModel.DateOfPurchase" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="pageModel.Amount" class="form-control" disabled="true" />
                                <label for="Amount"> Inköpsvärdet </label>
                                <ValidationMessage For="() => pageModel.Amount" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="pageModel.PricePerFunds" class="form-control" disabled="@DisabledForm" />
                                <label for="PricePerFunds"> Pris per köpt fond del </label>
                                <ValidationMessage For="() => pageModel.PricePerFunds" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="pageModel.HowMany" class="form-control" disabled="@DisabledForm" />
                                <label for="HowMany"> Antal </label>
                                <ValidationMessage For="() => pageModel.HowMany" class="text-danger" />
                            </div>
                        </div>
                    </div>
                    <br />

                    <div class="row">

                        <div id="mobile" class="col-3" />

                        <div class="col-3">
                            <div class="form-floating">
                                <InputDate @bind-Value="pageModel.DateOfSold" class="form-control" disabled="@DisabledForm" />
                                <label for="DateOfSold"> Säljsdatum </label>
                                <ValidationMessage For="() => pageModel.DateOfSold" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="pageModel.AmountSold" class="form-control" disabled="true" />
                                <label for="AmountSold"> Säljvärdet </label>
                                <ValidationMessage For="() => pageModel.AmountSold" class="text-danger" />
                            </div>
                        </div>


                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="pageModel.PricePerFundsSold" class="form-control" disabled="@DisabledForm" />
                                <label for="PricePerFundsSold"> Pris per såld fond </label>
                                <ValidationMessage For="() => pageModel.PricePerFundsSold" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="pageModel.Fee" class="form-control" disabled="@DisabledForm" />
                                <label for="Fee"> Avgift </label>
                                <ValidationMessage For="() => pageModel.Fee" class="text-danger" />
                            </div>
                        </div>

                    </div>
                    <br />

                    <div class="row">

                        <div id="mobile" class="col-3" />

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="pageModel.MoneyProfitOrLoss" class="form-control" disabled="true" />
                                <label for="MoneyProfitOrLoss"> Vinst/förlust </label>
                                <ValidationMessage For="() => pageModel.MoneyProfitOrLoss" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputText @bind-Value="pageModel.PercentProfitOrLoss" class="form-control" disabled="true" />
                                <label for="PercentProfitOrLoss"> Vinst/förlust i % </label>
                                <ValidationMessage For="() => pageModel.PercentProfitOrLoss" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputText @bind-Value="pageModel.Currency" class="form-control" disabled="@DisabledForm" />
                                <label for="Currency"> Valuta </label>
                                <ValidationMessage For="() => pageModel.Currency" class="text-danger" />
                            </div>
                        </div>

                    </div>

                    <br />

                    <div class="row">

                        <div class="col-12">
                            <div class="form-floating">
                                <InputTextArea rows="10" style="height:100%;" @bind-Value="pageModel.Note" class="form-control" disabled="@DisabledForm" />
                                <label for="Note"> Anteckningar </label>
                                <ValidationMessage For="() => pageModel.Note" class="text-danger" />
                            </div>
                        </div>
                    </div>

                    <br />

                    <div style="text-align:center">
                        <button hidden="@ShowOrHideAddNewButton" @onclick="HideNewOrChangesForm" type="submit" style="text-align:center" class="btn btn-outline-success btn-sm"> Lägg till såld fond </button>
                    </div>

                    <div style="text-align:center">
                        <button @onclick="HideNewOrChangesForm" hidden="@ShowOrHideEditButton" type="submit" style="text-align:center" class="btn btn-outline-warning btn-sm"> Ändra </button>
                    </div>

                    <br />

                    <div style="text-align:center">
                        <button @onclick="RefreshPage" type="button" style="text-align:center" class="btn btn-outline-secondary btn-sm"> Tillbaka </button>
                    </div>

                    <br />
                    <br />
                </EditForm>
            </div>

            @* View - Desktop *@
            <div id="desktop">
                <div class="card-body">
                    <QuickGrid Items="@queryable" Pagination="pagination">

                        <PropertyColumn Title="Fond namn" Property="@(c => c.FundName)" Sortable="true" />
                        <PropertyColumn Title="Inköpsdatum" Property="@(c => c.DateOfPurchase)" Format="yyyy-MM-dd" Sortable="true" />
                        <PropertyColumn Title="Inköpsvärdet" Property="@(c => c.Amount)" Sortable="true" />
                        <PropertyColumn Title="Säljsdatum" Property="@(c => c.DateOfSold)" Format="yyyy-MM-dd" Sortable="true" />
                        <PropertyColumn Title="Säljvärdet" Property="@(c => c.AmountSold)" Sortable="true" />
                        <PropertyColumn Title="Antal" Property="@(c => c.HowMany)" Sortable="true" />
                        <PropertyColumn Title="Vinst/förlust" Property="@(c => c.MoneyProfitOrLoss)" Sortable="true" />
                        <PropertyColumn Title="Vinst/förlust i %" Property="@(c => c.PercentProfitOrLoss)" Sortable="true" />

                        <TemplateColumn Title="Info">

                            <div class="btn-group" role="group">
                                <button title="Info" id="btnGroupDrop1" type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                    Info
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                    <li class="dropdown-item"><button class="btn btn-outline-info btn-sm" @onclick="@(() => Info(context))"> All info </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-warning btn-sm" @onclick="@(() => Edit(context))"> Ändra </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-danger btn-sm" @onclick="@(() => OpenDeleteWindow(context))"> Ta bort </button></li>
                                </ul>
                            </div>

                            <div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title"> Vill du ta bort sålda fonden? </h5>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-outline-danger" @onclick="@(() => Delete())"> Ta bort fond </button>
                                            <button type="button" class="btn btn-outline-secondary" data-dismiss="modal" @onclick="() => CloseWindow()"> Ångra </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (ShowBackdrop)
                            {
                                <div class="modal-backdrop fade show"></div>
                            }

                        </TemplateColumn>
                    </QuickGrid>

                    <div class="card-footer"><Paginator State="@pagination" /></div>

                    <br />
                    <br />

                </div>
            </div>

            @* View - Mobile *@
            <div id="mobile">
                <div data-spy="scroll">
                    <div class="card-body">
                        <QuickGrid Items="@queryable" Pagination="pagination">

                            <PropertyColumn Title="Fond namn" Property="@(c => c.FundName)" Sortable="true" />
                            <PropertyColumn Title="%" Property="@(c => c.PercentProfitOrLoss)" Sortable="true" />

                            <TemplateColumn Title="Info">

                                <div class="btn-group" role="group">
                                    <button title="Info" id="btnGroupDrop1" type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                        Info
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                        <li class="dropdown-item"><button class="btn btn-outline-info btn-sm" @onclick="@(() => Info(context))"> All info </button></li>
                                        <li class="dropdown-item"><button class="btn btn-outline-warning btn-sm" @onclick="@(() => Edit(context))"> Ändra </button></li>
                                        <li class="dropdown-item"><button class="btn btn-outline-danger btn-sm" @onclick="@(() => OpenDeleteWindow(context))"> Ta bort </button></li>
                                    </ul>
                                </div>

                                <div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title"> Vill du ta bort sålda fond? </h5>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-outline-danger" @onclick="@(() => Delete())"> Ta bort fond </button>
                                                <button type="button" class="btn btn-outline-secondary" data-dismiss="modal" @onclick="() => CloseWindow()"> Ångra </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                @if (ShowBackdrop)
                                {
                                    <div class="modal-backdrop fade show"></div>
                                }

                            </TemplateColumn>
                        </QuickGrid>

                        <br />
                        <br />

                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@* Footer *@
<div>

    <br />
    <br />

    <div class="footer" align="center">
        <p> Copyright 2023 - @DateTime.Now.Year</p>
    </div>

    <br />
    <br />

</div>

@* Back-End *@
@code
{
    [SupplyParameterFromForm]
    private SharesSoldFundViewModel pageModel { get; set; } = new();
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    private IQueryable<SharesSoldFundViewModel> queryable = Enumerable.Empty<SharesSoldFundViewModel>().AsQueryable();

    // Holds temporary id to delete items
    private int TemporaryId { get; set; } = 0;

    // Modol window settings
    private Guid Guid = Guid.NewGuid();
    private string ModalDisplay = "none;";
    private string ModalClass = "";
    private bool ShowBackdrop = false;

    // Hide button and fields
    private bool HideNewOrChangesFields { get; set; } = false;
    private bool ShowOrHideCreateButton { get; set; } = false;
    private bool ShowOrHideEditButton { get; set; } = false;
    private bool ShowOrHideAddNewButton { get; set; } = false;
    private bool DisabledForm { get; set; } = false;
    private bool ShowOrHideErrorMessage { get; set; } = true;

    // Text messeges
    private string ErrorMessage { get; set; } = string.Empty;

    // Load data from database to the Queryable container
    private void ConvertListToQueryable()
    {
        if (db.SharesSoldFunds.Count() == 0) return;

        queryable = Enumerable.Empty<SharesSoldFundViewModel>().AsQueryable();

        foreach (SharesSoldFunds model in db.SharesSoldFunds.OrderBy(c => c.SharesSoldFundId))
        {
            SharesSoldFundViewModel vm = BackEndClass.ChangeFromModelToViewModel(model);
            queryable = queryable.Concat(new[] { vm }.AsQueryable());
        }

        pagination.TotalItemCountChanged += (sender, EventArgs) => StateHasChanged();
    }

    protected override void OnInitialized() => ConvertListToQueryable();

    private void HideNewOrChangesForm()
    {
        HideNewOrChangesFields = !HideNewOrChangesFields;
        ShowOrHideCreateButton = true;
        ShowOrHideEditButton = true;
    }

    private void RefreshPage() => Navigation.Refresh(true);

    private void AddOrEdit()
    {
        DisabledForm = false;

        // Edit
        if (pageModel.SharesSoldFundId > 0)
        {
            ErrorMessage = BackEndClass.Edit(db, pageModel, false);

            if (!string.IsNullOrEmpty(ErrorMessage))
            {
                ShowOrHideErrorMessage = false;
                HideNewOrChangesFields = true;
                ShowOrHideEditButton = false;
                return;
            }
            else
            {
                pageModel = new();
                Navigation.Refresh(true);
                return;
            }
        }
        else
        {
            // Add
            ErrorMessage = BackEndClass.Add(db, pageModel, false);

            if (!string.IsNullOrEmpty(ErrorMessage))
            {
                ShowOrHideErrorMessage = false;
                HideNewOrChangesFields = true;
                return;
            }
            else
            {
                pageModel = new();
                Navigation.Refresh(true);
                return;
            }
        }
    }

    private void Info(SharesSoldFundViewModel vm)
    {
        HideNewOrChangesForm();
        ShowOrHideAddNewButton = true;
        DisabledForm = true;
        pageModel = vm;
    }

    private void Edit(SharesSoldFundViewModel vm)
    {
        DisabledForm = false;
        ShowOrHideEditButton = false;
        ShowOrHideAddNewButton = true;
        ShowOrHideCreateButton = true;
        HideNewOrChangesFields = true;
        pageModel = vm;
    }

    private void Delete()
    {
        if (db.SharesSoldFunds.Count() == 0) return;

        bool findId = db.SharesSoldFunds.Any(a => a.SharesSoldFundId == TemporaryId);

        if (findId)
        {
            SharesSoldFunds model = db.SharesSoldFunds.FirstOrDefault(a => a.SharesSoldFundId == TemporaryId);
            SharesSoldFundViewModel vm = BackEndClass.ChangeFromModelToViewModel(model);

            ErrorMessage = BackEndClass.Delete(db, vm, false);

            if (!string.IsNullOrEmpty(ErrorMessage))
            {
                ShowOrHideErrorMessage = false;
                return;
            }
            else
            {
                pageModel = new();
                Navigation.Refresh(true);
                return;
            }
        }
    }

    private void OpenDeleteWindow(SharesSoldFundViewModel vm)
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
        TemporaryId = vm.SharesSoldFundId;
    }

    private void CloseWindow()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}