@page "/SharesPurchased"

@using MyPrivateApp.Components.Enum
@using MyPrivateApp.Components.Shares.HelpClasses
@using MyPrivateApp.Components.ViewModels.SharesViewModels
@using MyPrivateApp.Data
@using MyPrivateApp.Data.Models
@using Microsoft.AspNetCore.Components.QuickGrid
@using MyPrivateApp.Data.Models.SharesModels

@rendermode InteractiveServer

@inject ApplicationDbContext db;
@inject NavigationManager Navigation

<PageTitle> Aktier </PageTitle>

<br />

<div class="btn-group" role="group">
    <button title="Info" id="btnGroupDrop1" type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        Alla aktier sidor
    </button>
    <ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
        <li class="dropdown-item"><NavLink href="Shares" type="button" class="btn btn-outline-dark btn-sm"> Start </NavLink></li>
        <li class="dropdown-item"><NavLink href="SharesPurchased" type="button" class="btn btn-outline-dark btn-sm"> Köpta aktier </NavLink></li>
        <li class="dropdown-item"><NavLink href="SharesSold" type="button" class="btn btn-outline-dark btn-sm">Sålda aktier</NavLink></li>
        <li class="dropdown-item"><NavLink href="SharesDividend" type="button" class="btn btn-outline-dark btn-sm">Utdelningar</NavLink></li>
        <li class="dropdown-item"><NavLink href="SharesTaxAndBrokerage" type="button" class="btn btn-outline-dark btn-sm">Skatter</NavLink></li>
        <li class="dropdown-item"><NavLink href="SharesImports" type="button" class="btn btn-outline-dark btn-sm"> Importera </NavLink></li>
        <li class="dropdown-item"><NavLink href="SharesDepositMoney" type="button" class="btn btn-outline-dark btn-sm"> Ta ut eller sätt in pengar </NavLink></li>
        <li class="dropdown-item"><NavLink href="SharesInterestRates" type="button" class="btn btn-outline-dark btn-sm"> Räntor </NavLink></li>
        <li class="dropdown-item"><NavLink href="SharesOtherImports" type="button" class="btn btn-outline-dark btn-sm"> Manuell hantering </NavLink></li>
        <li class="dropdown-item"><NavLink href="SharesErrorHandling" type="button" class="btn btn-outline-dark btn-sm">Felhantering</NavLink></li>
    </ul>
</div>

<br />
<br />

<h1 style="text-align:center"> Köpta aktier </h1>

<br />

<div style="text-align:center">
    <button class="btn btn-outline-success btn-sm" @onclick="@HideNewOrChangesSharesPurchasedForm" hidden="@ShowOrHideCreateButton">Köp aktie</button>
</div>

<br />
<br />

<div class="container">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <EditForm Model="sharesPurchased" OnSubmit="CreateOrUpdatePurchasedShares" FormName="CreateOrUpdatePurchasedShares" Enhance hidden="@(!HideNewOrChangesPurchasedSharesFields)">

                     <DataAnnotationsValidator />

                     <ValidationSummary class="text-danger" role="alert" />

                     <div class="row">

                         <div id="mobile" class="col-4" />

                         <div class="col-4">
                             <div class="form-floating">
                                 <InputText @bind-Value="sharesPurchased.CompanyName" class="form-control" disabled="@DisabledForm" />
                                 <label for="CompanyName"> Företag </label>
                                 <ValidationMessage For="() => sharesPurchased.CompanyName" class="text-danger" />
                             </div>
                         </div>

                         <div class="col-4">
                             <div class="form-floating">
                                 <InputText @bind-Value="sharesPurchased.TypeOfShares" class="form-control" disabled="@DisabledForm" />
                                 <label for="TypeOfShares"> Typ av aktie </label>
                                 <ValidationMessage For="() => sharesPurchased.TypeOfShares" class="text-danger" />
                             </div>
                         </div>

                         <div class="col-4">
                             <div class="form-floating">
                                 <InputText @bind-Value="sharesPurchased.ISIN" class="form-control" disabled="@DisabledForm" />
                                 <label for="ISIN"> ISIN </label>
                                 <ValidationMessage For="() => sharesPurchased.ISIN" class="text-danger" />
                             </div>
                         </div>

                     </div>

                     <br />

                     <div class="row">

                         <div id="mobile" class="col-4" />

                         <div class="col-4">
                             <div class="form-floating">
                                 <InputDate @bind-Value="sharesPurchased.DateOfPurchase" class="form-control" disabled="@DisabledForm" />
                                 <label for="DateOfPurchase"> Datum </label>
                                 <ValidationMessage For="() => sharesPurchased.DateOfPurchase" class="text-danger" />
                             </div>
                         </div>

                         <div class="col-4">
                             <div class="form-floating">
                                 <InputText @bind-Value="sharesPurchased.Account" class="form-control" disabled="@DisabledForm" />
                                 <label for="Account"> Konto </label>
                                 <ValidationMessage For="() => sharesPurchased.Account" class="text-danger" />
                             </div>
                         </div>

                         <div class="col-4">
                             <div class="form-floating">
                                 <InputText @bind-Value="sharesPurchased.Currency" class="form-control" disabled="@DisabledForm" />
                                 <label for="Currency"> Valuta </label>
                                 <ValidationMessage For="() => sharesPurchased.Currency" class="text-danger" />
                             </div>
                         </div>

                     </div>

                     <br />

                     <div class="row">

                         <div id="mobile" class="col-3" />

                         <div class="col-3">
                             <div class="form-floating">
                                 <InputNumber @bind-Value="sharesPurchased.HowMany" class="form-control" disabled="@DisabledForm" />
                                 <label for="HowMany"> Antal </label>
                                 <ValidationMessage For="() => sharesPurchased.HowMany" class="text-danger" />
                             </div>
                         </div>

                         <div class="col-3">
                             <div class="form-floating">
                                 <InputNumber @bind-Value="sharesPurchased.PricePerShares" class="form-control" disabled="@DisabledForm" />
                                 <label for="PricePerShares"> Pris per aktie </label>
                                 <ValidationMessage For="() => sharesPurchased.PricePerShares" class="text-danger" />
                             </div>
                         </div>

                         <div class="col-3">
                             <div class="form-floating">
                                 <InputNumber @bind-Value="sharesPurchased.Amount" class="form-control" disabled="true" />
                                 <label for="Amount"> Inköpsvärdet </label>
                                 <ValidationMessage For="() => sharesPurchased.Amount" class="text-danger" />
                             </div>
                         </div>

                         <div class="col-3">
                             <div class="form-floating">
                                 <InputNumber @bind-Value="sharesPurchased.Brokerage" class="form-control" disabled="@DisabledForm" />
                                 <label for="Brokerage"> Courtage </label>
                                 <ValidationMessage For="() => sharesPurchased.Brokerage" class="text-danger" />
                             </div>
                         </div>

                     </div>

                     <br />

                     <div class="row">

                         <div class="col-12">
                             <div class="form-floating">
                                 <InputTextArea @bind-Value="sharesPurchased.Note" class="form-control" disabled="@DisabledForm" />
                                 <label for="Note"> Anteckningar </label>
                                 <ValidationMessage For="() => sharesPurchased.Note" class="text-danger" />
                             </div>
                         </div>

                     </div>

                    <br />

                    <div style="text-align:center">
                        <button hidden="@ShowOrHideAddNewPurchasedSharesButton" @onclick="HideNewOrChangesSharesPurchasedForm" type="submit" style="text-align:center" class="btn btn-outline-success btn-sm"> Lägg till köpt aktie </button>
                    </div>

                    <div style="text-align:center">
                        <button @onclick="HideNewOrChangesSharesPurchasedForm" hidden="@ShowOrHideEditButton" type="submit" style="text-align:center" class="btn btn-outline-warning btn-sm"> Ändra </button>
                    </div>

                    <br />

                    <div style="text-align:center">
                        <button @onclick="RefreshPage" type="button" style="text-align:center" class="btn btn-outline-secondary btn-sm"> Tillbaka </button>
                    </div>

                    <br />
                    <br />
                </EditForm>
            </div>

            @* Desktop screen *@
            <div id="desktop">
                <div class="card-body">
                    <QuickGrid Items="@PurchasedSharesQueryable" Pagination="pagination" align="center">

                         <PropertyColumn Title="Datum" Property="@(c => c.DateOfPurchase)" Format="yyyy-MM-dd" Sortable="true" />
                         <PropertyColumn Title="Företag" Property="@(c => c.CompanyName)" Sortable="true" />
                         <PropertyColumn Title="Typ" Property="@(c => c.TypeOfShares)" Sortable="true" />
                         <PropertyColumn Title="Antal" Property="@(c => c.HowMany)" Sortable="true" />
                         <PropertyColumn Title="Pris per aktie" Property="@(c => c.PricePerShares)" Sortable="true" />
                         <PropertyColumn Title="Inköpsvärdet" Property="@(c => c.Amount)" Sortable="true" />
                         <PropertyColumn Title="Valuta" Property="@(c => c.Currency)" Sortable="true" />

                        <TemplateColumn Title="Info">

                            <div class="btn-group" role="group">
                                <button title="Info" id="btnGroupDrop1" type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                    Info
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                    <li class="dropdown-item"><button class="btn btn-outline-info btn-sm" @onclick="@(() => InfoSharesPurchased(context))"> All info </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-warning btn-sm" @onclick="@(() => EditSharesPurchased(context))"> Ändra </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-danger btn-sm" @onclick="@(() => OpenDeleteWindow())"> Ta bort </button></li>
                                </ul>
                            </div>

                            <div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title"> Vill du ta bort jakten? </h5>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-outline-danger" @onclick="@(() => DeleteSharesPurchased(context))"> Ta bort kontakt </button>
                                            <button type="button" class="btn btn-outline-secondary" data-dismiss="modal" @onclick="() => CloseWindow()"> Ångra </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (ShowBackdrop)
                            {
                                <div class="modal-backdrop fade show"></div>
                            }

                        </TemplateColumn>
                    </QuickGrid>

                    <div class="card-footer"><Paginator State="@pagination" /></div>

                    <br />
                    <br />

                </div>
            </div>

            @* Mobile streen *@
            <div id="mobile">
                <div class="card-body">
                    <QuickGrid Items="@PurchasedSharesQueryable" Pagination="pagination" align="center">

                        <PropertyColumn Title="Företag" Property="@(c => c.CompanyName)" Sortable="true" />
                        
                            <TemplateColumn Title="Info">

                            <div class="btn-group" role="group">
                                <button title="Info" id="btnGroupDrop1" type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                    Info
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                    <li class="dropdown-item"><button class="btn btn-outline-info btn-sm" @onclick="@(() => InfoSharesPurchased(context))"> All info </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-warning btn-sm" @onclick="@(() => EditSharesPurchased(context))"> Ändra </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-danger btn-sm" @onclick="@(() => OpenDeleteWindow())"> Ta bort </button></li>
                                </ul>
                            </div>

                            <div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title"> Vill du ta bort jakten? </h5>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-outline-danger" @onclick="@(() => DeleteSharesPurchased(context))"> Ta bort kontakt </button>
                                            <button type="button" class="btn btn-outline-secondary" data-dismiss="modal" @onclick="() => CloseWindow()"> Ångra </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (ShowBackdrop)
                            {
                                <div class="modal-backdrop fade show"></div>
                            }

                        </TemplateColumn>
                    </QuickGrid>

                    <div class="card-footer"><Paginator State="@pagination" /></div>

                    <br />
                    <br />

                </div>
            </div>

        </div>
    </div>
</div>

<br />
<br />

@code
{
    [SupplyParameterFromForm]
    private SharesPurchasedViewModel sharesPurchased { get; set; } = new();

    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    private IQueryable<SharesPurchasedViewModel> PurchasedSharesQueryable = Enumerable.Empty<SharesPurchasedViewModel>().AsQueryable();

    // Modol window settings
    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    // Hide button and fields
    private bool HideNewOrChangesPurchasedSharesFields { get; set; } = false;
    private bool ShowOrHideCreateButton { get; set; } = false;
    private bool ShowOrHideEditButton { get; set; } = false;
    private bool ShowOrHideAddNewPurchasedSharesButton { get; set; } = false;
    private bool DisabledForm { get; set; } = false;

    protected override void OnInitialized() => ConvertListToQueryable();

    // Load data from database to the Queryable container
    private void ConvertListToQueryable()
    {
        if (db.SharesPurchaseds.Count() == 0) return;

        PurchasedSharesQueryable = Enumerable.Empty<SharesPurchasedViewModel>().AsQueryable();

        foreach (SharesPurchaseds model in db.SharesPurchaseds.OrderBy(c => c.SharesPurchasedId))
        {
            SharesPurchasedViewModel sharesPurchased = SharesPurchasedHelpClass.ChangeFromModelToViewModel(model);
            PurchasedSharesQueryable = PurchasedSharesQueryable.Concat(new[] { sharesPurchased }.AsQueryable());
        }

        pagination.TotalItemCountChanged += (sender, EventArgs) => StateHasChanged();
    }

    private void RefreshPage() => Navigation.Refresh(true);

    private void CreateOrUpdatePurchasedShares()
    {
        DisabledForm = false;

        if (sharesPurchased.SharesPurchasedId > 0) ShowOrHideCreateButton = true;

        SharesPurchasedHelpClass.CreateOrUpdatePurchasedShares(db, sharesPurchased);

        sharesPurchased = new();
        Navigation.Refresh(true);

        return;
    }

    private void InfoSharesPurchased(SharesPurchasedViewModel incomingModel)
    {
        HideNewOrChangesSharesPurchasedForm();
        ShowOrHideAddNewPurchasedSharesButton = true;
        DisabledForm = true;
        sharesPurchased = incomingModel;
    }

    private void EditSharesPurchased(SharesPurchasedViewModel incomingModel)
    {
        DisabledForm = false;
        ShowOrHideEditButton = false;
        ShowOrHideAddNewPurchasedSharesButton = true;
        HideNewOrChangesPurchasedSharesFields = true;
        sharesPurchased = incomingModel;
    }

    private void DeleteSharesPurchased(SharesPurchasedViewModel incomingModel)
    {
        if (db.SharesPurchaseds.Count() == 0) return;

        SharesPurchasedHelpClass.DeleteSharesPurchased(db, incomingModel);

        Navigation.Refresh(true);
    }

    private void HideNewOrChangesSharesPurchasedForm()
    {
        HideNewOrChangesPurchasedSharesFields = !HideNewOrChangesPurchasedSharesFields;
        ShowOrHideCreateButton = true;
        ShowOrHideEditButton = true;
    }

    private void OpenDeleteWindow()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    private void CloseWindow()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}