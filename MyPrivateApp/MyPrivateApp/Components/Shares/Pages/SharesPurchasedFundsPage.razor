@page "/SharesPurchasedFundsPage"

@using MyPrivateApp.Components.Enum
@using MyPrivateApp.Components.Shares.Classes
@using MyPrivateApp.Components.ViewModels.SharesViewModels
@using MyPrivateApp.Data
@using MyPrivateApp.Data.Models
@using Microsoft.AspNetCore.Components.QuickGrid
@using MyPrivateApp.Data.Models.SharesModels

@rendermode InteractiveServer

@inject ApplicationDbContext db
@inject NavigationManager Navigation
@inject ISharesPurchasedFundsClass SharesPurchasedFundsClass
@inject ISharesFeeClass ISharesFeeClass

<PageTitle> Aktier </PageTitle>

<br />

@* Header *@
<div>

    @* Desktop Navigation*@
    <div id="desktop" style="text-align:center">
        <div class="btn-group">
            <NavLink href="SharesPage" type="button" class="btn btn-outline-dark btn-sm"> Start </NavLink>
            <NavLink href="SharesImportsPage" type="button" class="btn btn-outline-dark btn-sm"> Importera </NavLink>
            <NavLink href="SharesPurchasedPage" type="button" class="btn btn-outline-dark btn-sm"> Köpta aktier </NavLink>
            <NavLink href="SharesSoldPage" type="button" class="btn btn-outline-dark btn-sm">Sålda aktier</NavLink>
            <NavLink href="SharesPurchasedFundsPage" type="button" class="btn btn-outline-dark btn-sm"> Köpta fonder </NavLink>
            <NavLink href="SharesSoldFundsPage" type="button" class="btn btn-outline-dark btn-sm"> Sålda fonder </NavLink>
            <NavLink href="SharesDividendPage" type="button" class="btn btn-outline-dark btn-sm">Utdelningar</NavLink>
            <NavLink href="SharesFeePage" type="button" class="btn btn-outline-dark btn-sm">Avgifter</NavLink>
            <NavLink href="SharesDepositMoneyPage" type="button" class="btn btn-outline-dark btn-sm"> Banköverföringar </NavLink>
            <NavLink href="SharesInterestRatesPage" type="button" class="btn btn-outline-dark btn-sm"> Räntor </NavLink>
            <NavLink href="SharesOtherImportsPage" type="button" class="btn btn-outline-dark btn-sm"> Manuell hantering </NavLink>
            <NavLink href="SharesErrorHandlingPage" type="button" class="btn btn-outline-dark btn-sm">Felhantering</NavLink>
        </div>
    </div>

    @* Mobile Navigation*@
    <div id="mobile">
        <div class="btn-group" role="group">
            <button title="Info" id="btnGroupDrop1" type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                Alla aktier sidor
            </button>
            <ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                <li class="dropdown-item"><NavLink href="SharesPage" type="button" class="btn btn-outline-dark btn-sm"> Start </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesImportsPage" type="button" class="btn btn-outline-dark btn-sm"> Importera </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesPurchasedPage" type="button" class="btn btn-outline-dark btn-sm"> Köpta aktier </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesSoldPage" type="button" class="btn btn-outline-dark btn-sm">Sålda aktier</NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesPurchasedFundsPage" type="button" class="btn btn-outline-dark btn-sm"> Köpta fonder </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesSoldFundsPage" type="button" class="btn btn-outline-dark btn-sm"> Sålda fonder </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesDividendPage" type="button" class="btn btn-outline-dark btn-sm">Utdelningar</NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesFeePage" type="button" class="btn btn-outline-dark btn-sm">Avgifter</NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesDepositMoneyPage" type="button" class="btn btn-outline-dark btn-sm"> Banköverföringar </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesInterestRatesPage" type="button" class="btn btn-outline-dark btn-sm"> Räntor </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesOtherImportsPage" type="button" class="btn btn-outline-dark btn-sm"> Manuell hantering </NavLink></li>
                <li class="dropdown-item"><NavLink href="SharesErrorHandlingPage" type="button" class="btn btn-outline-dark btn-sm">Felhantering</NavLink></li>
            </ul>
        </div>
    </div>

    <br />
    <br />

    <h1 style="text-align:center"> Köpta fonder </h1>

    <div style="text-align:center" hidden="@ShowOrHideCreateButton">

        <br />
        <br />

        <button class="btn btn-outline-success btn-sm" @onclick="@HideNewOrChangesForm"> Köp fond </button>
    </div>

    <div style="text-align:center" hidden="@ShowOrHideErrorMessage">

        <br />
        <br />

        <Alert Color="AlertColor.Danger"> <Icon Name="IconName.ExclamationTriangleFill" class="me-2"></Icon> <b>@ErrorMessage</b> </Alert>
    </div>

    <br />
    <br />

</div>

<div class="container">
    <div class="col-md-12">
        <div class="card">

            @* Form *@
            <div class="card-header">
                <EditForm Model="sharesPurchasedFund" OnSubmit="AddOrEdit" FormName="AddOrUpdatePurchasedFunds" Enhance hidden="@(!HideNewOrChangesFields)">

                    <DataAnnotationsValidator />

                    <ValidationSummary class="text-danger" role="alert" />

                    <br />

                    <div class="row">

                        <div id="mobile" class="col-4" />

                        <div class="col-4">
                            <div class="form-floating">
                                <InputText @bind-Value="sharesPurchasedFund.FundName" class="form-control" disabled="@DisabledForm" />
                                <label for="FundName"> Fond namn </label>
                                <ValidationMessage For="() => sharesPurchasedFund.FundName" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-4">
                            <div class="form-floating">
                                <InputText @bind-Value="sharesPurchasedFund.TypeOfFund" class="form-control" disabled="@DisabledForm" />
                                <label for="TypeOfFund"> Typ av fond </label>
                                <ValidationMessage For="() => sharesPurchasedFund.TypeOfFund" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-4">
                            <div class="form-floating">
                                <InputText @bind-Value="sharesPurchasedFund.ISIN" class="form-control" disabled="@DisabledForm" />
                                <label for="ISIN"> ISIN </label>
                                <ValidationMessage For="() => sharesPurchasedFund.ISIN" class="text-danger" />
                            </div>
                        </div>

                    </div>

                    <br />

                    <div class="row">

                        <div id="mobile" class="col-4" />

                        <div class="col-4">
                            <div class="form-floating">
                                <InputDate @bind-Value="sharesPurchasedFund.DateOfPurchase" class="form-control" disabled="@DisabledForm" />
                                <label for="DateOfPurchase"> Datum </label>
                                <ValidationMessage For="() => sharesPurchasedFund.DateOfPurchase" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-4">
                            <div class="form-floating">
                                <InputText @bind-Value="sharesPurchasedFund.Account" class="form-control" disabled="@DisabledForm" />
                                <label for="Account"> Konto </label>
                                <ValidationMessage For="() => sharesPurchasedFund.Account" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-4">
                            <div class="form-floating">
                                <InputText @bind-Value="sharesPurchasedFund.Currency" class="form-control" disabled="@DisabledForm" />
                                <label for="Currency"> Valuta </label>
                                <ValidationMessage For="() => sharesPurchasedFund.Currency" class="text-danger" />
                            </div>
                        </div>

                    </div>

                    <br />

                    <div class="row">

                        <div id="mobile" class="col-3" />

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="sharesPurchasedFund.HowMany" class="form-control" disabled="@DisabledForm" />
                                <label for="HowMany"> Antal </label>
                                <ValidationMessage For="() => sharesPurchasedFund.HowMany" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="sharesPurchasedFund.PricePerFunds" class="form-control" disabled="@DisabledForm" />
                                <label for="PricePerShares"> Pris per fond (snitt vid köp av fler) </label>
                                <ValidationMessage For="() => sharesPurchasedFund.PricePerFunds" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="sharesPurchasedFund.Amount" class="form-control" disabled="true" />
                                <label for="Amount"> Inköpsvärdet </label>
                                <ValidationMessage For="() => sharesPurchasedFund.Amount" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="sharesPurchasedFund.Fee" class="form-control" disabled="@DisabledForm" />
                                <label for="Brokerage"> Avgift </label>
                                <ValidationMessage For="() => sharesPurchasedFund.Fee" class="text-danger" />
                            </div>
                        </div>

                    </div>

                    <br />

                    <div class="row">

                        <div class="col-12">
                            <div class="form-floating">
                                <InputTextArea rows="10" style="height:100%;" @bind-Value="sharesPurchasedFund.Note" class="form-control" disabled="@DisabledForm" />
                                <label for="Note"> Anteckningar </label>
                                <ValidationMessage For="() => sharesPurchasedFund.Note" class="text-danger" />
                            </div>
                        </div>

                    </div>

                    <br />

                    <div class="row" hidden="@BuyMore">

                        <div id="mobile" class="col-3" />

                        <div class="col-3">
                            <div class="form-floating">
                                <InputDate @bind-Value="sharesPurchasedFund.MoreDateOfPurchase" class="form-control" />
                                <label for="MoreDateOfPurchase"> Köp mer: Datum </label>
                                <ValidationMessage For="() => sharesPurchasedFund.MoreDateOfPurchase" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="sharesPurchasedFund.MoreHowMany" class="form-control" />
                                <label for="MoreHowMany"> Köp mer: Antal </label>
                                <ValidationMessage For="() => sharesPurchasedFund.MoreHowMany" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="sharesPurchasedFund.MorePricePerFunds" class="form-control" />
                                <label for="MorePricePerFunds"> Köp mer: Pris per fond del </label>
                                <ValidationMessage For="() => sharesPurchasedFund.MorePricePerFunds" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="sharesPurchasedFund.MoreFee" class="form-control" />
                                <label for="MoreFee"> Köp mer: Avgift </label>
                                <ValidationMessage For="() => sharesPurchasedFund.MoreFee" class="text-danger" />
                            </div>
                        </div>

                    </div>

                    <div class="row" hidden="@Sale">

                        <div id="mobile" class="col-3" />

                        <div class="col-3">
                            <div class="form-floating">
                                <InputDate @bind-Value="sharesPurchasedFund.SaleDateOfPurchase" class="form-control" />
                                <label for="SaleDateOfPurchase"> Sälj: Datum </label>
                                <ValidationMessage For="() => sharesPurchasedFund.SaleDateOfPurchase" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="sharesPurchasedFund.SaleHowMany" class="form-control" />
                                <label for="SaleHowMany"> Sälj: Antal </label>
                                <ValidationMessage For="() => sharesPurchasedFund.SaleHowMany" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="sharesPurchasedFund.SalePricePerFunds" class="form-control" />
                                <label for="SalePricePerFunds"> Sälj: Pris per fond del </label>
                                <ValidationMessage For="() => sharesPurchasedFund.SalePricePerFunds" class="text-danger" />
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="form-floating">
                                <InputNumber @bind-Value="sharesPurchasedFund.SaleFee" class="form-control" />
                                <label for="SaleFee"> Sälj: Avgift </label>
                                <ValidationMessage For="() => sharesPurchasedFund.SaleFee" class="text-danger" />
                            </div>
                        </div>

                    </div>

                    <br />

                    <div style="text-align:center" hidden="@ShowOrHideAddNewButton">
                        <button @onclick="HideNewOrChangesForm" type="submit" style="text-align:center" class="btn btn-outline-success btn-sm"> Lägg till köpt fond </button>

                        <br />
                        <br />
                    </div>

                    <div style="text-align:center" hidden="@ShowOrHideEditButton">
                        <button @onclick="HideNewOrChangesForm" type="submit" style="text-align:center" class="btn btn-outline-warning btn-sm"> Ändra </button>

                        <br />
                        <br />
                    </div>

                    <div style="text-align:center" hidden="@ShowOrHideButtonAddMoreShares">
                        <button @onclick="AddMoreButton" type="button" style="text-align:center" class="btn btn-outline-success btn-sm"> Köp mer </button>

                        <br />
                        <br />
                    </div>

                    <div style="text-align:center" hidden="@ShowOrHideSaleButton">
                        <button @onclick="OpenWindowSale" type="button" style="text-align:center" class="btn btn-outline-danger btn-sm"> Sälja </button>

                        <div class="modal @ModalClassSale" tabindex="-1" role="dialog" style="display:@ModalDisplaySale">
                            <div class="modal-dialog" role="document" style="width:400px">
                                <div class="modal-content">

                                    <h5> Vill du sälja fonden: <strong> @sharesPurchasedFund.FundName? </strong> </h5>
                                    <h5> Antal fond delar: <strong> @sharesPurchasedFund.SaleHowMany av @sharesPurchasedFund.HowMany? </strong> </h5>

                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-outline-danger" @onclick="@(() => SellButton(sharesPurchasedFund))"> Sälja </button>
                                        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal" @onclick="() => CloseWindowSale()"> Ångra </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (ShowBackdropSale)
                        {
                            <div class="modal-backdrop fade show"></div>
                        }

                        <br />
                        <br />
                    </div>

                    <div style="text-align:center">
                        <button @onclick="RefreshPage" type="button" style="text-align:center" class="btn btn-outline-secondary btn-sm"> Tillbaka </button>
                    </div>

                    <br />
                    <br />
                </EditForm>
            </div>

            @* Desktop *@
            <div id="desktop">
                <div class="card-body">
                    <QuickGrid Items="@PurchasedFundsQueryable" Pagination="pagination">

                        <PropertyColumn Title="Datum" Property="@(c => c.DateOfPurchase)" Format="yyyy-MM-dd" Sortable="true" />
                        <PropertyColumn Title="Fond namn" Property="@(c => c.FundName)" Sortable="true" />
                        <PropertyColumn Title="Typ" Property="@(c => c.TypeOfFund)" Sortable="true" />
                        <PropertyColumn Title="Antal" Property="@(c => c.HowMany)" Sortable="true" />
                        <PropertyColumn Title="Pris per fond del (snitt vid köp av fler)" Property="@(c => c.PricePerFunds)" Sortable="true" />
                        <PropertyColumn Title="Inköpsvärdet" Property="@(c => c.Amount)" Sortable="true" />
                        <PropertyColumn Title="Valuta" Property="@(c => c.Currency)" Sortable="true" />

                        <TemplateColumn Title="Info">

                            <div class="btn-group" role="group">
                                <button title="Info" id="btnGroupDrop1" type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                    Info
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                    <li class="dropdown-item"><button class="btn btn-outline-info btn-sm" @onclick="@(() => Info(context))"> All info </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-warning btn-sm" @onclick="@(() => Edit(context))"> Ändra </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-success btn-sm" @onclick="@(() => AddMore(context))"> Köp mera </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-dark btn-sm" @onclick="@(() => Sell(context))"> Sälj </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-danger btn-sm" @onclick="@(() => OpenWindowDelete())"> Ta bort </button></li>
                                </ul>
                            </div>

                            <div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title"> Vill du ta bort aktien? </h5>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-outline-danger" @onclick="@(() => Delete(context))"> Ta bort fond </button>
                                            <button type="button" class="btn btn-outline-secondary" data-dismiss="modal" @onclick="() => CloseWindowDelete()"> Ångra </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (ShowBackdrop)
                            {
                                <div class="modal-backdrop fade show"></div>
                            }

                        </TemplateColumn>
                    </QuickGrid>

                    <div class="card-footer"><Paginator State="@pagination" /></div>

                    <br />
                    <br />

                </div>
            </div>

            @* Mobile *@
            <div id="mobile">
                <div class="card-body">
                    <QuickGrid Items="@PurchasedFundsQueryable" Pagination="pagination">

                        <PropertyColumn Title="Företag" Property="@(c => c.FundName)" Sortable="true" />

                        <TemplateColumn Title="Info">

                            <div class="btn-group" role="group">
                                <button title="Info" id="btnGroupDrop1" type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                    Info
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                    <li class="dropdown-item"><button class="btn btn-outline-info btn-sm" @onclick="@(() => Info(context))"> All info </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-warning btn-sm" @onclick="@(() => Edit(context))"> Ändra </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-success btn-sm" @onclick="@(() => AddMore(context))"> Köp mera </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-dark btn-sm" @onclick="@(() => Sell(context))"> Sälj </button></li>
                                    <li class="dropdown-item"><button class="btn btn-outline-danger btn-sm" @onclick="@(() => OpenWindowDelete())"> Ta bort </button></li>
                                </ul>
                            </div>

                            <div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title"> Vill du ta bort fonden? </h5>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-outline-danger" @onclick="@(() => Delete(context))"> Ta bort fond </button>
                                            <button type="button" class="btn btn-outline-secondary" data-dismiss="modal" @onclick="() => CloseWindowDelete()"> Ångra </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (ShowBackdrop)
                            {
                                <div class="modal-backdrop fade show"></div>
                            }

                        </TemplateColumn>
                    </QuickGrid>

                    <br />
                    <br />

                </div>
            </div>

        </div>
    </div>
</div>

<br />
<br />

<div class="footer" align="center">
    <p> Copyright 2023 - @DateTime.Now.Year</p>
</div>

<br />
<br />

@code
{
    [SupplyParameterFromForm]
    private SharesPurchasedFundViewModel sharesPurchasedFund { get; set; } = new();

    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    private IQueryable<SharesPurchasedFundViewModel> PurchasedFundsQueryable = Enumerable.Empty<SharesPurchasedFundViewModel>().AsQueryable();

    // Modol window settings
    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public Guid GuidSale = Guid.NewGuid();
    public string ModalDisplaySale = "none;";
    public string ModalClassSale = "";
    public bool ShowBackdropSale = false;

    // Hide button and fields
    private bool HideNewOrChangesFields { get; set; } = false;
    private bool ShowOrHideCreateButton { get; set; } = false;
    private bool ShowOrHideEditButton { get; set; } = false;
    private bool ShowOrHideAddNewButton { get; set; } = false;
    private bool DisabledForm { get; set; } = false;
    private bool BuyMore { get; set; } = true;
    private bool ShowOrHideButtonAddMoreShares { get; set; } = true;
    private bool Sale { get; set; } = true;
    private bool ShowOrHideSaleButton { get; set; } = true;
    private bool ShowOrHideErrorMessage { get; set; } = true;

    // Text messeges
    private string ErrorMessage { get; set; } = string.Empty;

    // Load data from database to the Queryable container
    private void ConvertListToQueryable()
    {
        if (db.SharesPurchasedFunds.Count() == 0) return;

        PurchasedFundsQueryable = Enumerable.Empty<SharesPurchasedFundViewModel>().AsQueryable();

        foreach (SharesPurchasedFunds model in db.SharesPurchasedFunds.OrderBy(c => c.DateOfPurchase))
        {
            SharesPurchasedFundViewModel vm = SharesPurchasedFundsClass.ChangeFromModelToViewModel(model);
            PurchasedFundsQueryable = PurchasedFundsQueryable.Concat(new[] { vm }.AsQueryable());
        }

        pagination.TotalItemCountChanged += (sender, EventArgs) => StateHasChanged();
    }

    protected override void OnInitialized() => ConvertListToQueryable();

    private void HideNewOrChangesForm()
    {
        HideNewOrChangesFields = !HideNewOrChangesFields;
        ShowOrHideCreateButton = true;
        ShowOrHideEditButton = true;
    }

    private void RefreshPage() => Navigation.Refresh(true);

    private void AddOrEdit()
    {
        DisabledForm = false;

        if (sharesPurchasedFund.SharesPurchasedFundId > 0)
        {
            // Edit
            ErrorMessage = SharesPurchasedFundsClass.Edit(db, sharesPurchasedFund);

            if (!string.IsNullOrEmpty(ErrorMessage))
            {
                HideNewOrChangesForm();
                ShowOrHideErrorMessage = false;
                ShowOrHideEditButton = false;
                return;
            }
            else
            {
                sharesPurchasedFund = new();
                Navigation.Refresh(true);
                return;
            }
        }
        else
        {
            // Add
            ErrorMessage = SharesPurchasedFundsClass.Add(db, sharesPurchasedFund, false);

            if (!string.IsNullOrEmpty(ErrorMessage))
            {
                HideNewOrChangesForm();
                ShowOrHideErrorMessage = false;
                ShowOrHideEditButton = true;
                ShowOrHideAddNewButton = false;
                return;
            }
            else
            {
                sharesPurchasedFund = new();
                Navigation.Refresh(true);
                return;
            }
        }
    }

    private void AddMore(SharesPurchasedFundViewModel vm)
    {
        if (vm == null) return;

        HideNewOrChangesForm();
        BuyMore = false;
        DisabledForm = true;
        ShowOrHideButtonAddMoreShares = false;
        ShowOrHideAddNewButton = true;
        sharesPurchasedFund = vm;
    }

    private void AddMoreButton()
    {
        ErrorMessage = SharesPurchasedFundsClass.AddMore(db, sharesPurchasedFund, false);

        if (!string.IsNullOrEmpty(ErrorMessage))
        {
            ShowOrHideErrorMessage = false;
            HideNewOrChangesFields = true;
            ShowOrHideEditButton = false;
            return;
        }
        else
        {
            sharesPurchasedFund = new();
            Navigation.Refresh(true);
            return;
        }
    }

    private void Info(SharesPurchasedFundViewModel vm)
    {
        if (vm == null) return;

        HideNewOrChangesForm();
        ShowOrHideAddNewButton = true;
        DisabledForm = true;
        sharesPurchasedFund = vm;
    }

    private void Edit(SharesPurchasedFundViewModel vm)
    {
        if (vm == null) return;

        DisabledForm = false;
        ShowOrHideEditButton = false;
        ShowOrHideAddNewButton = true;
        HideNewOrChangesFields = true;
        sharesPurchasedFund = vm;
    }

    private void Sell(SharesPurchasedFundViewModel vm)
    {
        if (vm == null) return;

        HideNewOrChangesForm();
        Sale = false;
        DisabledForm = true;
        ShowOrHideSaleButton = false;
        ShowOrHideAddNewButton = true;
        sharesPurchasedFund = vm;
    }

    private void SellButton(SharesPurchasedFundViewModel vm)
    {
        if (vm == null) return;

        ErrorMessage = SharesPurchasedFundsClass.Sell(db, sharesPurchasedFund, false, ISharesFeeClass);

        if (!string.IsNullOrEmpty(ErrorMessage))
        {
            ShowOrHideErrorMessage = false;
            HideNewOrChangesFields = true;
            ShowOrHideEditButton = false;
            return;
        }
        else
        {
            sharesPurchasedFund = new();
            Navigation.Refresh(true);
            return;
        }
    }

    private void OpenWindowSale()
    {
        ModalDisplaySale = "block;";
        ModalClassSale = "Show";
        ShowBackdropSale = true;
        StateHasChanged();
    }

    private void CloseWindowSale()
    {
        ModalDisplaySale = "none";
        ModalClassSale = "";
        ShowBackdropSale = false;
        StateHasChanged();
    }

    private void Delete(SharesPurchasedFundViewModel vm)
    {
        if (vm == null) return;

        if (db.SharesPurchaseds.Count() == 0) return;

        ErrorMessage = SharesPurchasedFundsClass.Delete(db, null, vm, false);

        if (!string.IsNullOrEmpty(ErrorMessage))
        {
            ShowOrHideErrorMessage = false;
            HideNewOrChangesFields = true;
            ShowOrHideEditButton = false;
            return;
        }
        else
        {
            sharesPurchasedFund = new();
            Navigation.Refresh(true);
            return;
        }
    }

    private void OpenWindowDelete()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    private void CloseWindowDelete()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}