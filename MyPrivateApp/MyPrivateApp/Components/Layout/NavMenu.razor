@implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href=""></a>  @* Överskrift *@
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @foreach (var navItem in GetNavItems())
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@navItem.Href" Match="@navItem.Match">
                    <span class="@navItem.IconClass" aria-hidden="true"></span> @navItem.Text
                </NavLink>
            </div>
        }

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logga ut
                        </button>
                    </form>
                </div>
            </Authorized>

@*             <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Registrera
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Logga in
                    </NavLink>
                </div>
            </NotAuthorized> *@
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;

    private List<NavItem> GetNavItems()
    {
        return new List<NavItem>
        {
            new NavItem { Href = "", Text = "Hem", IconClass = "bi bi-house-door-fill-nav-menu", Match = NavLinkMatch.All },
            new NavItem { Href = "SharesIndexYearsPage", Text = "Aktier", IconClass = "bi bi-plus-square-fill-nav-menu" },
            new NavItem { Href = "FrozenFood", Text = "Frysvaror", IconClass = "bi bi-plus-square-fill-nav-menu" },
            new NavItem { Href = "FarmWorkPage", Text = "Gårdsarbete", IconClass = "bi bi-plus-square-fill-nav-menu" },
            new NavItem { Href = "ShopingList", Text = "Inköpslistor", IconClass = "bi bi-plus-square-fill-nav-menu" },
            new NavItem { Href = "HuntingPage", Text = "Jakt", IconClass = "bi bi-plus-square-fill-nav-menu" },
            new NavItem { Href = "Contact", Text = "Kontakter", IconClass = "bi bi-plus-square-fill-nav-menu" },
            new NavItem { Href = "MZPurchasedPlayersPage", Text = "ManagerZone", IconClass = "bi bi-plus-square-fill-nav-menu" },
            new NavItem { Href = "FarmingActive", Text = "Odling", IconClass = "bi bi-plus-square-fill-nav-menu" },
            new NavItem { Href = "Trips", Text = "Resor", IconClass = "bi bi-plus-square-fill-nav-menu" },
            new NavItem { Href = "ManageNavMenu", Text = "Inställningar", IconClass = "bi bi-plus-square-fill-nav-menu" },
            new NavItem { Href = "auth", Text = "Inloggad som", IconClass = "bi bi-lock-nav-menu" }
        };
    }

    private class NavItem
    {
        public string Href { get; set; } = "";
        public string Text { get; set; } = "";
        public string IconClass { get; set; } = "";
        public NavLinkMatch Match { get; set; } = NavLinkMatch.Prefix;
    }

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}